version: '2.1'
services:
    redis:
        image: 'redis:5.0.5'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:latest
        environment:
            - POSTGRES_USER=$POSTGRES_AIRFLOW_USER
            - POSTGRES_PASSWORD=$POSTGRES_AIRFLOW_PASSWORD
            - POSTGRES_DB=$POSTGRES_AIRFLOW_DB
        # Uncomment these lines to persist data on the local filesystem.
        #     - PGDATA=/var/lib/postgresql/data/pgdata
        # volumes:
        #     - ./pgdata:/var/lib/postgresql/data/pgdata

    webserver:
        image: datafuel/airflow:latest
        restart: always
        depends_on:
            - postgres
            - redis
        environment:
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@postgres:5432/${POSTGRES_AIRFLOW_DB}
            - AIRFLOW_ADMIN_USERNAME=$AIRFLOW_ADMIN_USERNAME
            - AIRFLOW_ADMIN_PASSWORD=$AIRFLOW_ADMIN_PASSWORD
            - AIRFLOW_ADMIN_FIRST_NAME=$AIRFLOW_ADMIN_FIRST_NAME
            - AIRFLOW_ADMIN_LAST_NAME=$AIRFLOW_ADMIN_LAST_NAME
            - AIRFLOW_ADMIN_EMAIL=$AIRFLOW_ADMIN_EMAIL
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        volumes:
            - ./dags:/usr/local/airflow/dags
            - ./airflow_repo/setup/airflow.cfg:${AIRFLOW_USER_HOME}/airflow.cfg
            - ./airflow_repo/setup/setup.sh:${AIRFLOW_USER_HOME}/setup.sh
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8080:8080"
        stdin_open: true
        tty: true
        command: /bin/bash setup.sh
        # healthcheck:
        #     test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
        #     interval: 30s
        #     timeout: 30s
        #     retries: 3

    flower:
        image: datafuel/airflow:latest
        restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
            - AIRFLOW__CELERY__RESULT_BACKEND_SECRET=postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@postgres:5432/${POSTGRES_AIRFLOW_DB}
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@postgres:5432/${POSTGRES_AIRFLOW_DB}
            # - REDIS_PASSWORD=redispass
        volumes:
            - ./airflow_repo/setup/airflow.cfg:${AIRFLOW_USER_HOME}/airflow.cfg
        ports:
            - "5555:5555"
        command: airflow celery flower

    scheduler:
        image: datafuel/airflow:latest
        restart: always
        depends_on:
            - webserver
        volumes:
            - ./dags:/usr/local/airflow/dags
            - ./airflow_repo/setup/airflow.cfg/:${AIRFLOW_USER_HOME}/airflow.cfg
            # - ./airflow_repo/airflow.cfg/:${AIRFLOW_USER_HOME}/airflow.cfg
            # - ./airflow_repo/entrypoint.sh:${AIRFLOW_USER_HOME}/entrypoint.sh
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        environment:
            - LOAD_EX=n
            - EXECUTOR=Celery
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@postgres:5432/${POSTGRES_AIRFLOW_DB}
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: airflow scheduler

    worker:
        image: datafuel/airflow:latest
        restart: always
        depends_on:
            - scheduler
        volumes:
            - ./dags:/usr/local/airflow/dags
            - ./airflow_repo/setup/airflow.cfg:${AIRFLOW_USER_HOME}/airflow.cfg
            # - ./airflow_repo/airflow.cfg/:${AIRFLOW_USER_HOME}/airflow.cfg
            # - ./airflow_repo/entrypoint.sh:${AIRFLOW_USER_HOME}/entrypoint.sh
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        environment:
            - EXECUTOR=Celery
            - AIRFLOW__CELERY__RESULT_BACKEND_SECRET=postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@postgres:5432/${POSTGRES_AIRFLOW_DB}
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@postgres:5432/${POSTGRES_AIRFLOW_DB}            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: airflow celery worker

networks: 
    default: 
        external: 
            name: aida-local-network
            